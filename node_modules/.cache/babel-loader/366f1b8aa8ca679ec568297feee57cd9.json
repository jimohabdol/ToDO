{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Humble Jimoh\\\\loan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Humble Jimoh\\\\loan\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport About from \"./About\";\nimport Title from './Title';\nimport Footer from './Footer';\nimport axios from 'axios';\nimport './style.scss';\nwindow.id = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.complete = id => {\n      console.log(id);\n      this.setState(prevState => {\n        const updatedTodos = prevState.data.map(todo => {\n          if (todo.id === id) {\n            return _objectSpread({}, todo, {\n              isCompleted: !todo.isCompleted\n            });\n          }\n\n          return todo;\n        });\n        return {\n          data: updatedTodos\n        };\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n    this.apiURL = 'https://jsonplaceholder.typicode.com/todos';\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n  }\n\n  addTodo(value) {\n    const newTodo = {\n      text: value,\n      isCompleted: false\n    };\n    axios.post('https://5e4bbf9ca641ed0014b022d3.mockapi.io/api/todo', newTodo).then(response => this.setState({\n      data: this.state.data\n    })); //updata data\n    // this.state.data.push(newTodo)\n    //updata state\n    //this.setState({data: this.state.data})\n  }\n\n  removeTodo(id) {\n    const reminder = this.state.data.filter(todo => {\n      if (todo.id !== id) {\n        return todo;\n      }\n    });\n    this.setState({\n      data: reminder\n    });\n  }\n\n  componentDidMount() {\n    axios('https://5e4bbf9ca641ed0014b022d3.mockapi.io/api/todo').then(response => this.setState({\n      data: response.data\n    }));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TodoForm, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        todos: this.state.data,\n        remove: this.removeTodo,\n        complete: this.complete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Humble Jimoh/loan/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","TodoForm","TodoList","About","Title","Footer","axios","window","id","App","constructor","props","complete","console","log","setState","prevState","updatedTodos","data","map","todo","isCompleted","state","apiURL","addTodo","bind","removeTodo","value","newTodo","text","post","then","response","reminder","filter","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport About from \"./About\"\nimport Title from './Title'\nimport Footer from './Footer'\nimport axios from 'axios'\nimport './style.scss';\n\nwindow.id = 0\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: []\n    }\n\n    this.apiURL = 'https://jsonplaceholder.typicode.com/todos'\n    this.addTodo = this.addTodo.bind(this);\n\t\tthis.removeTodo = this.removeTodo.bind(this)\n  }\n  \n  addTodo(value) {\n    const newTodo = {\n      text: value,\n      isCompleted: false,\n    }\n    axios.post('https://5e4bbf9ca641ed0014b022d3.mockapi.io/api/todo', newTodo)\n      .then(response => this.setState({data: this.state.data}))\n    //updata data\n    // this.state.data.push(newTodo)\n    //updata state\n    //this.setState({data: this.state.data})\n    \n  }\n  \n  removeTodo(id) {\n    const reminder = this.state.data.filter(todo => {\n      if(todo.id !== id) {\n        return todo\n      }\n    })\n    this.setState({data: reminder})\n  }\n  \n  complete = (id) => {\n    console.log(id)\n    this.setState(prevState => {\n      const updatedTodos = prevState.data.map(todo => {\n        if(todo.id===id) {\n            return {\n              ...todo,\n              isCompleted: !todo.isCompleted\n            }\n        }\n        return todo\n      })\n        return {data: updatedTodos};\n    })\n  }\n\n  componentDidMount() {\n    axios('https://5e4bbf9ca641ed0014b022d3.mockapi.io/api/todo')\n      .then(response => this.setState({data: response.data}))\n  }\n  \n  render() {\n    return(\n      <Router>\n        <div id=\"container\">\n          <Title />\n          <Route exact path='/' render={props => (\n            <React.Fragment>\n             <TodoForm addTodo={this.addTodo} />\n             <TodoList \n              todos={this.state.data} \n              remove={this.removeTodo} \n              complete={this.complete}\n              />\n            </React.Fragment>\n          )} />\n          <Route path='/about' component={About} />\n          <Footer />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}